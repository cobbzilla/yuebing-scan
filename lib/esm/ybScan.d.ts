import { MobilettoLogger } from "mobiletto-common";
import { AnalyzedAssetType, DiscoveredAssetType, DownloadedAssetType, LibraryScanType, LibraryType, LocalConfigType, MediaType, SourceScanType, SourceType } from "yuebing-model";
import { MobilettoOrmRepository } from "mobiletto-orm";
import { MobilettoClock } from "mobiletto-orm-scan-typedef";
import { MobilettoScanner, MobilettoStorageScan } from "mobiletto-orm-scan";
import { MobilettoConnection } from "mobiletto-base";
export type YbScanConfig = {
    systemName: string;
    scanCheckInterval?: number;
    logger: MobilettoLogger;
    localConfigRepo: () => MobilettoOrmRepository<LocalConfigType>;
    mediaRepo: () => MobilettoOrmRepository<MediaType>;
    libraryRepo: () => MobilettoOrmRepository<LibraryType>;
    libraryScanRepo: () => MobilettoOrmRepository<LibraryScanType>;
    sourceScanRepo: () => MobilettoOrmRepository<SourceScanType>;
    sourceRepo: () => MobilettoOrmRepository<SourceType>;
    discoveredAssetRepo: () => MobilettoOrmRepository<DiscoveredAssetType>;
    downloadedAssetRepo?: () => MobilettoOrmRepository<DownloadedAssetType>;
    analyzedAssetRepo?: () => MobilettoOrmRepository<AnalyzedAssetType>;
    sourceConnections: Record<string, MobilettoConnection>;
    clock?: MobilettoClock;
};
export declare const DEFAULT_SCAN_CHECK_INTERVAL: number;
export declare const LIBRARY_SCAN_TIMEOUT: number;
export declare const LIBRARY_SCAN_CHECK_INTERVAL: number;
export declare const ASSET_SEP = ">";
export declare class YbScan {
    readonly config: YbScanConfig;
    readonly scanCheckInterval: number;
    readonly clock: MobilettoClock;
    readonly initTime: number;
    timeout: number | object | null;
    running: boolean;
    stopping: boolean;
    readonly scanner: MobilettoScanner;
    constructor(config: YbScanConfig);
    start(): void;
    stop(): void;
    scanLibrary(lib: LibraryType, interval: number): Promise<void>;
    scanSource(sourceName: string, fileExt: string[]): Promise<MobilettoStorageScan>;
}
